{"title":"算法-回文数","uid":"2951c741688259208b1fb3af7c687644","slug":"算法-回文数","date":"2023-02-09T14:55:14.000Z","updated":"2023-02-18T17:22:50.678Z","comments":true,"path":"api/articles/算法-回文数.json","keywords":null,"cover":"https://api.r10086.com/%E5%9B%BE%E5%8C%85/%E7%A5%9E%E5%A5%87%E5%AE%9D%E8%B4%9D%E6%A8%AA%E5%B1%8F%E7%B3%BB%E5%88%971/wallhaven-4x379l.jpg","content":"<h1 id=\"回文数\"><a href=\"#回文数\" class=\"headerlink\" title=\"回文数\"></a>回文数</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。</p>\n<p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>\n<p>例如，121 是回文，而 123 不是。</p>\n<p>来源：力扣（LeetCode）</p>\n<p>链接：<a href=\"https://leetcode.cn/problems/palindrome-number\">https://leetcode.cn/problems/palindrome-number</a></p></blockquote>\n<h2 id=\"version-1\"><a href=\"#version-1\" class=\"headerlink\" title=\"version 1\"></a>version 1</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @param &#123;number&#125; x\n * @return &#123;boolean&#125;\n */</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">isPalindrome</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> leftIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">let</span> rightIndex <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>leftIndex<span class=\"token operator\">&lt;</span>rightIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>leftIndex<span class=\"token punctuation\">]</span><span class=\"token operator\">===</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>rightIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            leftIndex<span class=\"token operator\">++</span>\n            rightIndex<span class=\"token operator\">--</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../img/%E7%AE%97%E6%B3%95-%E5%9B%9E%E6%96%87%E6%95%B0/version1_res.png\" alt=\"version1_res\"></p>\n<h2 id=\"version-2\"><a href=\"#version-2\" class=\"headerlink\" title=\"version 2\"></a>version 2</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * @param &#123;number&#125; x\n * @return &#123;boolean&#125;\n */</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">isPalindrome</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/../img/%E7%AE%97%E6%B3%95-%E5%9B%9E%E6%96%87%E6%95%B0/version2_res.png\" alt=\"version1_res\"></p>\n","feature":true,"text":"回文数 给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。 回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 例如，121 是回文，而 123 不是。 来源：力扣（LeetCode） 链接：https://leetcode.c...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":1,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E6%96%87%E6%95%B0\"><span class=\"toc-text\">回文数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#version-1\"><span class=\"toc-text\">version 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#version-2\"><span class=\"toc-text\">version 2</span></a></li></ol></li></ol>","author":{"name":"YeZhou","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/65165470?v=4","link":"/","description":"心在路上 路在心里","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/yyyz1011"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA6ifrwjSFlBcGKpQG3djw2qcrqpJ1eWsosnhMLlsJiJc"},"tuchong":{"icon":"/svg/tuchong.svg","link":"https://tuchong.com/27088635/?utm_source=weixin&utm_medium=android_share"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/393187584?spm_id_from=333.1007.0.0"}}}},"mapped":true,"prev_post":{"title":"前端CSS-实现展开收起","uid":"5a2ade3c73b7acbe2fc201db23330b68","slug":"前端CSS-实现展开收起","date":"2023-02-18T04:19:20.000Z","updated":"2023-02-19T16:05:54.893Z","comments":true,"path":"api/articles/前端CSS-实现展开收起.json","keywords":null,"cover":"https://api.r10086.com/%E5%9B%BE%E5%8C%85/%E7%A5%9E%E5%A5%87%E5%AE%9D%E8%B4%9D%E6%A8%AA%E5%B1%8F%E7%B3%BB%E5%88%971/wallhaven-4oyd2m.jpg","text":"css 实现长文本的展开收起 效果可见 ➡ https://codesandbox.io/s/xenodochial-haslett-drohnr?file=/src/App.vue &lt;template&gt; &lt;div class&#x3D;&quot;text-w...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"前端","slug":"前端","count":5,"path":"api/categories/前端.json"}],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"}],"author":{"name":"YeZhou","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/65165470?v=4","link":"/","description":"心在路上 路在心里","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/yyyz1011"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA6ifrwjSFlBcGKpQG3djw2qcrqpJ1eWsosnhMLlsJiJc"},"tuchong":{"icon":"/svg/tuchong.svg","link":"https://tuchong.com/27088635/?utm_source=weixin&utm_medium=android_share"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/393187584?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{"title":"前端CSS-grid","uid":"aa2fd1521ca7cb521e2b48d5d97b1661","slug":"前端CSS-grid","date":"2023-02-08T14:29:01.000Z","updated":"2023-02-18T17:24:05.953Z","comments":true,"path":"api/articles/前端CSS-grid.json","keywords":null,"cover":"https://api.r10086.com/%E5%9B%BE%E5%8C%85/%E7%A5%9E%E5%A5%87%E5%AE%9D%E8%B4%9D%E6%A8%AA%E5%B1%8F%E7%B3%BB%E5%88%971/wallhaven-rdo32m.jpg","text":"css之grid https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid https://article.itxueyuan.com/GjlqAZ 浏览器兼容性 https://developer.mozilla.org/zh-...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":5,"path":"api/categories/前端.json"}],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"}],"author":{"name":"YeZhou","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/65165470?v=4","link":"/","description":"心在路上 路在心里","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/yyyz1011"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA6ifrwjSFlBcGKpQG3djw2qcrqpJ1eWsosnhMLlsJiJc"},"tuchong":{"icon":"/svg/tuchong.svg","link":"https://tuchong.com/27088635/?utm_source=weixin&utm_medium=android_share"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/393187584?spm_id_from=333.1007.0.0"}}}}}}